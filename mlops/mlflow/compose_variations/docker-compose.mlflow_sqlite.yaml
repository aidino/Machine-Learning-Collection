# Have the following environment vars set in shell before running docker-compose
# (suggested values here but can use whatever desired):
# export DB_NAME=mlflowdb
# export MLFLOW_PORT=5001

version: '3.3'

services:
    app:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        # networks:
        #     - frontend
        expose:
            - ${MLFLOW_PORT}
        ports:
            - "${MLFLOW_PORT}:${MLFLOW_PORT}"
        environment:
            - BACKEND=sqlite:///db/${DB_NAME}.db
            - ARTIFACTS=/mlruns
          # For artifact store in AWS S3 (note boto was installed in container):
          #  - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          #  - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          #  - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
          #  - ARTIFACTS="s3://mlflow_bucket/mlflow/"
        volumes:
            - mlrun_data:/mlruns
            - sqlitedb_data:/db

        command: 
            - sh    # (sh allows for var substitution of BACKEND and ARTIFACTS)
            - -c
            - mlflow server 
                --port ${MLFLOW_PORT} 
                --host 0.0.0.0 
                --backend-store-uri $${BACKEND} 
                --default-artifact-root $${ARTIFACTS}

    # still useful if we tweak to handle htpasswd basic authentication to gate users
    # nginx:
        # restart: always
        # build: ./nginx
        # image: mlflow_nginx
        # container_name: mlflow_nginx
        # ports:
            # - "80:80"
        # networks:
            # - frontend
            # - backend
        # depends_on:
            # - app

# networks:
#     frontend:
#         driver: bridge
#     backend:
#         driver: bridge
    
volumes:
    mlrun_data:
    sqlitedb_data:
